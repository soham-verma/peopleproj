# Workflow for a Python application
# This workflow installs dependencies, runs linting, and executes tests.
# Documentation: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

# Trigger workflow on push or pull request to the "main" branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Specify permissions for the workflow
permissions:
  contents: read  # Minimum permissions required for this workflow

jobs:
  build:
    # Run the job on the latest Ubuntu environment
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Upgrade pip to the latest version
          pip install flake8 pytest           # Install necessary tools
          if [ -f requirements.txt ]; then    # Install project-specific dependencies
            pip install -r requirements.txt
          fi

      # Step 4: Lint code with flake8
      - name: Lint with flake8
        run: |
          # Check for syntax errors and undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Perform full linting, treating errors as warnings for maximum complexity and line length
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Step 5: Run tests with pytest
      - name: Test with pytest
        run: |
          pytest  # Run all tests
